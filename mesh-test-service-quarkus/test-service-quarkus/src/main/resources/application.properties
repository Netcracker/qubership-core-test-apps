quarkus.package.type=legacy-jar
quarkus.http.port=8080
quarkus.log.level=${LOG_LEVEL:INFO}

deployment.version=${DEPLOYMENT_VERSION:v1}
cloud.microservice.bg_version=${DEPLOYMENT_VERSION:v1}
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, spanId=%X{spanId}, [%c{2.}] (%t) %s%e%n
quarkus.oidc.tenant-enabled=false
quarkus.application.cloud_service_name=${CLOUD_SERVICE_NAME:mesh-test-service-quarkus-v1}

cloud.microservice.name=${MICROSERVICE_NAME:mesh-test-service-quarkus}
cloud.microservice.namespace=${CLOUD_NAMESPACE:unknown}
dbaas.api.agent.url=${DBAAS_CLIENT_ADDRESS:http://dbaas-agent:8080}
dbaas.datasource.main-type=service

# tracing parameters
quarkus.jaeger.enabled: true
quarkus.jaeger.service-name: ${cloud.microservice.name}-${cloud.microservice.namespace}
quarkus.jaeger.propagation: b3
quarkus.jaeger.sampler-type: ${tracing-param-evaluation-wa.sampler-type.${TRACING_ENABLED:false}}
quarkus.jaeger.sampler-param: ${tracing-param-evaluation-wa.sampler-param.${TRACING_ENABLED:false}}
quarkus.jaeger.endpoint: http://${TRACING_HOST:nc-diagnostic-agent}:14268/api/traces


quarkus.vault.authentication.kubernetes.role=${MICROSERVICE_NAME:mesh-test-service-quarkus}

# Disable creating new docker containers with external services
quarkus.datasource.devservices.enabled=false
quarkus.vault.devservices.enabled=false
quarkus.keycloak.devservices.enabled=false
quarkus.mongodb.devservices.enabled=false

quarkus.headers.allowed=namespace,custom-header
quarkus.datasource.db-kind=postgresql

com.netcracker.cloud.springcloud.config.source.ConfigServerClient/mp-rest/url=http://config-server:8080

com.netcracker.quarkus.client.PaaSMediationClient/mp-rest/url=http://paas-mediation:8080
com.netcracker.quarkus.client.ProviderRestClientAuthUser/mp-rest/url=http://internal-gateway-service:8080

quarkus.stomp-server.websocket-path=/api/v1/websocket
quarkus.stomp-server.isSockJS=true44

# enable swagger documentation
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.enable=true
